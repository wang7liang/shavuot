<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ws.shavuot.dao.UserMapper">

    <resultMap id="BaseResultMap" type="com.ws.shavuot.model.User">
            <id column="id" property="id" jdbcType="BIGINT"/>
            <result column="uuid" property="uuid" jdbcType="VARCHAR"/>
            <result column="user_name" property="userName" jdbcType="VARCHAR"/>
            <result column="mobilephone" property="mobilephone" jdbcType="VARCHAR"/>
            <result column="email" property="email" jdbcType="VARCHAR"/>
            <result column="email_password" property="emailPassword" jdbcType="VARCHAR"/>
            <result column="position" property="position" jdbcType="VARCHAR"/>
            <result column="pic_url" property="picUrl" jdbcType="VARCHAR"/>
            <result column="related_user_id" property="relatedUserId" jdbcType="VARCHAR"/>
            <result column="status" property="status" jdbcType="VARCHAR"/>
            <result column="company_id" property="companyId" jdbcType="INTEGER"/>
            <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
            <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
            <result column="create_by" property="createBy" jdbcType="INTEGER"/>
            <result column="update_by" property="updateBy" jdbcType="INTEGER"/>
            <result column="remark" property="remark" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
    id,uuid,user_name,mobilephone,email,email_password,position,pic_url,related_user_id,status,company_id,create_time,update_time,create_by,update_by,remark
    </sql>

    <insert id="insertSelective" parameterType="com.ws.shavuot.model.User" useGeneratedKeys="true"
            keyProperty="id">
        insert into st_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
            id,
            </if>
            <if test="uuid != null">
            uuid,
            </if>
            <if test="userName != null">
            user_name,
            </if>
            <if test="mobilephone != null">
            mobilephone,
            </if>
            <if test="email != null">
            email,
            </if>
            <if test="emailPassword != null">
            email_password,
            </if>
            <if test="position != null">
            position,
            </if>
            <if test="picUrl != null">
            pic_url,
            </if>
            <if test="relatedUserId != null">
            related_user_id,
            </if>
            <if test="status != null">
            status,
            </if>
            <if test="companyId != null">
            company_id,
            </if>
            <if test="createTime != null">
            create_time,
            </if>
            <if test="updateTime != null">
            update_time,
            </if>
            <if test="createBy != null">
            create_by,
            </if>
            <if test="updateBy != null">
            update_by,
            </if>
            <if test="remark != null">
            remark
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
            #{id,jdbcType=BIGINT},
            </if>
            <if test="uuid != null">
            #{uuid,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
            #{userName,jdbcType=VARCHAR},
            </if>
            <if test="mobilephone != null">
            #{mobilephone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
            #{email,jdbcType=VARCHAR},
            </if>
            <if test="emailPassword != null">
            #{emailPassword,jdbcType=VARCHAR},
            </if>
            <if test="position != null">
            #{position,jdbcType=VARCHAR},
            </if>
            <if test="picUrl != null">
            #{picUrl,jdbcType=VARCHAR},
            </if>
            <if test="relatedUserId != null">
            #{relatedUserId,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
            #{status,jdbcType=VARCHAR},
            </if>
            <if test="companyId != null">
            #{companyId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
            #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
            #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
            #{createBy,jdbcType=INTEGER},
            </if>
            <if test="updateBy != null">
            #{updateBy,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
            #{remark,jdbcType=VARCHAR}
            </if>
        </trim>
    </insert>


    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from st_user
        where
        id = #{id,jdbcType=BIGINT}
    </select>

    <update id="updateByPrimaryKeySelective" parameterType="com.ws.shavuot.model.User">
        update st_user set
        <trim suffixOverrides=",">
                <if test="id != null">
                id = #{id,jdbcType=BIGINT},
                </if>
                <if test="uuid != null">
                uuid = #{uuid,jdbcType=VARCHAR},
                </if>
                <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
                </if>
                <if test="mobilephone != null">
                mobilephone = #{mobilephone,jdbcType=VARCHAR},
                </if>
                <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
                </if>
                <if test="emailPassword != null">
                email_password = #{emailPassword,jdbcType=VARCHAR},
                </if>
                <if test="position != null">
                position = #{position,jdbcType=VARCHAR},
                </if>
                <if test="picUrl != null">
                pic_url = #{picUrl,jdbcType=VARCHAR},
                </if>
                <if test="relatedUserId != null">
                related_user_id = #{relatedUserId,jdbcType=VARCHAR},
                </if>
                <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
                </if>
                <if test="companyId != null">
                company_id = #{companyId,jdbcType=INTEGER},
                </if>
                <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
                </if>
                <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
                </if>
                <if test="createBy != null">
                create_by = #{createBy,jdbcType=INTEGER},
                </if>
                <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=INTEGER},
                </if>
                <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR}
                </if>
        </trim>
        where
        id = #{id,jdbcType=BIGINT}
    </update>

    <insert id="insertBatch" parameterType="java.util.List">
        insert into st_user
        ( id, uuid, user_name, mobilephone, email, email_password, position, pic_url, related_user_id, status, company_id, create_time, update_time, create_by, update_by, remark)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id}, #{item.uuid}, #{item.userName}, #{item.mobilephone}, #{item.email}, #{item.emailPassword}, #{item.position}, #{item.picUrl}, #{item.relatedUserId}, #{item.status}, #{item.companyId}, #{item.createTime}, #{item.updateTime}, #{item.createBy}, #{item.updateBy}, #{item.remark})
        </foreach>
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.ws.shavuot.model.User">
        update st_user set
        <trim suffixOverrides=",">
                id = #{id,jdbcType=BIGINT},
                uuid = #{uuid,jdbcType=VARCHAR},
                user_name = #{userName,jdbcType=VARCHAR},
                mobilephone = #{mobilephone,jdbcType=VARCHAR},
                email = #{email,jdbcType=VARCHAR},
                email_password = #{emailPassword,jdbcType=VARCHAR},
                position = #{position,jdbcType=VARCHAR},
                pic_url = #{picUrl,jdbcType=VARCHAR},
                related_user_id = #{relatedUserId,jdbcType=VARCHAR},
                status = #{status,jdbcType=VARCHAR},
                company_id = #{companyId,jdbcType=INTEGER},
                create_time = #{createTime,jdbcType=TIMESTAMP},
                update_time = #{updateTime,jdbcType=TIMESTAMP},
                create_by = #{createBy,jdbcType=INTEGER},
                update_by = #{updateBy,jdbcType=INTEGER},
                remark = #{remark,jdbcType=VARCHAR}
        </trim>
        where
        id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from st_user
        where
        id = #{id,jdbcType=BIGINT}
    </delete>

    <sql id="listWhereOptions">
        <where>
            <if test="id != null">
                and id = #{id,jdbcType=BIGINT}
            </if>
            <if test="uuid != null">
                and uuid = #{uuid,jdbcType=VARCHAR}
            </if>
            <if test="userName != null">
                and user_name = #{userName,jdbcType=VARCHAR}
            </if>
            <if test="mobilephone != null">
                and mobilephone = #{mobilephone,jdbcType=VARCHAR}
            </if>
            <if test="email != null">
                and email = #{email,jdbcType=VARCHAR}
            </if>
            <if test="emailPassword != null">
                and email_password = #{emailPassword,jdbcType=VARCHAR}
            </if>
            <if test="position != null">
                and position = #{position,jdbcType=VARCHAR}
            </if>
            <if test="picUrl != null">
                and pic_url = #{picUrl,jdbcType=VARCHAR}
            </if>
            <if test="relatedUserId != null">
                and related_user_id = #{relatedUserId,jdbcType=VARCHAR}
            </if>
            <if test="status != null">
                and status = #{status,jdbcType=VARCHAR}
            </if>
            <if test="companyId != null">
                and company_id = #{companyId,jdbcType=INTEGER}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime,jdbcType=TIMESTAMP}
            </if>
            <if test="createBy != null">
                and create_by = #{createBy,jdbcType=INTEGER}
            </if>
            <if test="updateBy != null">
                and update_by = #{updateBy,jdbcType=INTEGER}
            </if>
            <if test="remark != null">
                and remark = #{remark,jdbcType=VARCHAR}
            </if>
        </where>
    </sql>

    <select id="selectBySelective" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from st_user
        <include refid="listWhereOptions"/>
    </select>

    <select id="selectBySelectiveCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(1) from st_user
        <include refid="listWhereOptions"/>
    </select>


</mapper>